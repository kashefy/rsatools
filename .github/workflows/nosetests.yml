name: nosetests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        conda init bash
    - name: Install dependencies
      run: |
        conda create -q -n test-env python=${{ matrix.python-version }} pytables numpy scipy tqdm
        source activate test-env
#    - name: Lint with flake8
#      run: |
#        conda install flake8
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Unit Testing
      run: |
        source activate test-env
        python --version
        conda install -q nose coveralls
        nosetests --with-coverage
        find . -name "*lcov.info*"
    #- name: Coveralls
      #uses: AndreMiras/coveralls-python-action@develop
      #with:
        #parallel: true
        #flag-name: Unit Testing
    - name: Coveralls Parallel
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        flag-name: run-${{ matrix.test_number }}
        parallel: true
        
  #coveralls_finish:
    #needs: build
    #runs-on: ubuntu-latest
    #steps:
    #- name: Coveralls Finished
      #uses: AndreMiras/coveralls-python-action@develop
      #with:
        #github-token: ${{ secrets.GITHUB_TOKEN }}
        #parallel-finished: true
    #- name: Coverage
      #if: startsWith( ${{ matrix.python-version }}, '3.9' )
      #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #run: |
        #echo ${{ contains('${{ matrix.python-version }}', '3.9') }}
        #python --version
        #source activate test-env
        #coveralls --service=github --verbose
  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
