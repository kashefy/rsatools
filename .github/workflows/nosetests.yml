name: nosetests

on: [push, pull_request]

jobs:
  build:
    #~ runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        include:
          - python-version: 3.7
            ubuntu-version: ubuntu-20.04
          - python-version: 3.8
            ubuntu-version: ubuntu-20.04
          - python-version: 3.9
            ubuntu-version: ubuntu-22.04
          - python-version: 3.10
            ubuntu-version: ubuntu-latest
    runs-on: ${{ matrix.ubuntu-version }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        conda init bash
    - name: Install dependencies
      run: |
        conda create -q -n test-env python=${{ matrix.python-version }} pytables numpy scipy pandas tqdm pyyaml
        source activate test-env
#    - name: Lint with flake8
#      run: |
#        conda install flake8
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Set my pythonpath
      run: |
         echo "PYTHONPATH=/home/runner/work/rsatools/rsatools" >> $GITHUB_ENV
    - name: show python path
      run: |
         python -c "import sys; print('\n'.join(sys.path))"
    - name: Unit Testing
      run: |
        source activate test-env
        python --version
        conda install -q nose coveralls
        nosetests --with-coverage
    - name: Coveralls
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel: true
        flag-name: Unit Testing
        
  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
